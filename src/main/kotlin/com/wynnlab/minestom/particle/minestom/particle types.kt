@file:JvmName("ParticleTypes")

@file:Suppress("UNUSED")

package com.wynnlab.minestom.particle.minestom

import com.wynnlab.minestom.particle.minestom.extra.*
import net.minestom.server.particle.Particle as MinestomParticle

import com.wynnlab.minestom.particle.minestom.ParticleTypes as PT
import com.wynnlab.minestom.particle.minestom.ParticleTypes.OffsetAndSpeed as O
import com.wynnlab.minestom.particle.minestom.ParticleTypes.Color as C

object ParticleType {
val AMBIENT_ENTITY_EFFECT: PT<C, Nothing?> = PT.ColorParticleType(MinestomParticle.AMBIENT_ENTITY_EFFECT)
val ANGRY_VILLAGER: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.ANGRY_VILLAGER)
val BARRIER: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.BARRIER)
val LIGHT: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.LIGHT)
val BLOCK: PT<O, BlockState> = PT.Block(MinestomParticle.BLOCK)
val BUBBLE: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.BUBBLE)
val CLOUD: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.CLOUD)
val CRIT: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.CRIT)
val DAMAGE_INDICATOR: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.DAMAGE_INDICATOR)
val DRAGON_BREATH: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.DRAGON_BREATH)
val DRIPPING_LAVA: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.DRIPPING_LAVA)
val FALLING_LAVA: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.FALLING_LAVA)
val LANDING_LAVA: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.LANDING_LAVA)
val DRIPPING_WATER: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.DRIPPING_WATER)
val FALLING_WATER: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.FALLING_WATER)
val DUST: PT<O, Dust> = PT.DUST
val DUST_COLOR_TRANSITION: PT<O, DustTransition> = PT.DUST_COLOR_TRANSITION
val EFFECT: PT<C, Nothing?> = PT.ColorParticleType(MinestomParticle.EFFECT)
val ELDER_GUARDIAN: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.ELDER_GUARDIAN)
val ENCHANTED_HIT: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.ENCHANTED_HIT)
val ENCHANT: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.ENCHANT)
val END_ROD: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.END_ROD)
val ENTITY_EFFECT: PT<C, Nothing?> = PT.ColorParticleType(MinestomParticle.ENTITY_EFFECT)
val EXPLOSION_EMITTER: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.EXPLOSION_EMITTER)
val EXPLOSION: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.EXPLOSION)
val FALLING_DUST: PT<O, BlockState> = PT.Block(MinestomParticle.FALLING_DUST)
val FIREWORK: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.FIREWORK)
val FISHING: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.FISHING)
val FLAME: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.FLAME)
val SOUL_FIRE_FLAME: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.SOUL_FIRE_FLAME)
val SOUL: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.SOUL)
val FLASH: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.FLASH)
val HAPPY_VILLAGER: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.HAPPY_VILLAGER)
val COMPOSTER: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.COMPOSTER)
val HEART: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.HEART)
val INSTANT_EFFECT: PT<C, Nothing?> = PT.ColorParticleType(MinestomParticle.INSTANT_EFFECT)
val ITEM: PT<O, Item> = PT.ITEM
val VIBRATION: PT<O, Vibration> = PT.VIBRATION
val ITEM_SLIME: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.ITEM_SLIME)
val ITEM_SNOWBALL: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.ITEM_SNOWBALL)
val LARGE_SMOKE: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.LARGE_SMOKE)
val LAVA: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.LAVA)
val MYCELIUM: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.MYCELIUM)
val NOTE: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.NOTE)
val POOF: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.POOF)
val PORTAL: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.PORTAL)
val RAIN: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.RAIN)
val SMOKE: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.SMOKE)
val SNEEZE: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.SNEEZE)
val SPIT: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.SPIT)
val SQUID_INK: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.SQUID_INK)
val SWEEP_ATTACK: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.SWEEP_ATTACK)
val TOTEM_OF_UNDYING: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.TOTEM_OF_UNDYING)
val UNDERWATER: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.UNDERWATER)
val SPLASH: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.SPLASH)
val WITCH: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.WITCH)
val BUBBLE_POP: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.BUBBLE_POP)
val CURRENT_DOWN: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.CURRENT_DOWN)
val BUBBLE_COLUMN_UP: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.BUBBLE_COLUMN_UP)
val NAUTILUS: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.NAUTILUS)
val DOLPHIN: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.DOLPHIN)
val CAMPFIRE_COSY_SMOKE: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.CAMPFIRE_COSY_SMOKE)
val CAMPFIRE_SIGNAL_SMOKE: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.CAMPFIRE_SIGNAL_SMOKE)
val DRIPPING_HONEY: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.DRIPPING_HONEY)
val FALLING_HONEY: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.FALLING_HONEY)
val LANDING_HONEY: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.LANDING_HONEY)
val FALLING_NECTAR: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.FALLING_NECTAR)
val FALLING_SPORE_BLOSSOM: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.FALLING_SPORE_BLOSSOM)
val ASH: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.ASH)
val CRIMSON_SPORE: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.CRIMSON_SPORE)
val WARPED_SPORE: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.WARPED_SPORE)
val SPORE_BLOSSOM_AIR: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.SPORE_BLOSSOM_AIR)
val DRIPPING_OBSIDIAN_TEAR: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.DRIPPING_OBSIDIAN_TEAR)
val FALLING_OBSIDIAN_TEAR: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.FALLING_OBSIDIAN_TEAR)
val LANDING_OBSIDIAN_TEAR: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.LANDING_OBSIDIAN_TEAR)
val REVERSE_PORTAL: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.REVERSE_PORTAL)
val WHITE_ASH: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.WHITE_ASH)
val SMALL_FLAME: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.SMALL_FLAME)
val SNOWFLAKE: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.SNOWFLAKE)
val DRIPPING_DRIPSTONE_LAVA: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.DRIPPING_DRIPSTONE_LAVA)
val FALLING_DRIPSTONE_LAVA: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.FALLING_DRIPSTONE_LAVA)
val DRIPPING_DRIPSTONE_WATER: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.DRIPPING_DRIPSTONE_WATER)
val FALLING_DRIPSTONE_WATER: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.FALLING_DRIPSTONE_WATER)
val GLOW_SQUID_INK: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.GLOW_SQUID_INK)
val GLOW: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.GLOW)
val WAX_ON: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.WAX_ON)
val WAX_OFF: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.WAX_OFF)
val ELECTRIC_SPARK: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.ELECTRIC_SPARK)
val SCRAPE: PT<O, Nothing?> = PT.DefaultParticleType(MinestomParticle.SCRAPE)
}